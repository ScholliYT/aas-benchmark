name: AaS Benchmark
version: "0.1.1"
about: A tool to benchmark pattern matching algorithms.
args:
    - ALGORITHMS:
        help: Set the algorithm(s) to be benchmarked, set multiple algorithms comma-seperated
        required: true
        index: 1
    - executions:
        help: Set how often the algorithm is being executed (default 1)
        short: n
        long: executions
        takes_value: true
        value_name: executions
    - random_text:
        help: Generates a random text with the given length
        short: t
        long: randomtext
        takes_value: true
        value_name: length
    - seed:
        help: Enter a seed (unsigned 64-bit integer) for random generated text and patterns
        short: s
        long: seed
        takes_value: true
        value_name: seed
    - text_from_file:
        help: Load a text from a file
        long: textfromfile
        takes_value: true
        value_name: file_name
    #- text_from_file_binary:
    #    help: Load a binary text from a file
    #    long: textfromfilebin
    #    takes_value: true
    #    value_name: file_name
    - random_pattern_from_text:
        help: Take one or multiple random parts from the text with given length(s) as patterns  (e.g. 10 for length 10 or 1..10 for lengths 1 to 10 or 1..10,2 for lengths 1 to 10 using step size 2)
        short: p
        long: randompatternfromtext
        takes_value: true
        value_name: lengths
    - pattern_from_text:
        help: Takes a part from the text as a pattern using a given range (e.g. 0..10 for characters 0 to 9)
        long: patternfromtext
        takes_value: true
        value_name: range
    - pattern_from_argument:
        help: Set a UTF-8 string as a pattern
        long: patternfromarg
        takes_value: true
        value_name: pattern
    - pattern_from_file:
        help: Load a pattern from a file
        long: patternfromfile
        takes_value: true
        value_name: file_name
    - random_pattern:
        help: Generate one or multiple random patterns with given length(s) (e.g. 10 for length 10 or 1..10 for length 1 to 10 or 1..10,2 for lengths 1 to 10 using step size 2)
        long: randompattern
        takes_value: true
        value_name: lengths
    - human_readble:
        help: Print a human-readble summary instead of a comma-seperated values summary
        short: h
        long: human-readble
        takes_value: false
